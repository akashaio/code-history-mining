ext.home = System.env.HOME
ext.basePath = System.getProperty("user.dir")
ext.ideaPath = "/Applications/IntelliJ IDEA 13.app/"
ext.codeMiningPath = withDefault("$home/Library/Application Support/IntelliJIdea14/live-plugins/code-history-mining", System.getProperty("codeMiningPath"))
ext.livePluginPath = withDefault("$home/IdeaProjects/live-plugin", System.getProperty("livePluginPath"))

apply plugin: 'java'
apply plugin: 'groovy'

repositories {
	mavenCentral()
	mavenLocal()
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
    compile files("${basePath}/lib/groovy-all-2.2.1.jar")
    compile files("${basePath}/lib/code-mining-core.jar")
    compile files("${basePath}/lib/LivePlugin.jar")
    compile files("${basePath}/lib/vcs-reader.jar")
    compile files("${basePath}/lib/commons-csv-1.0.jar")

    provided fileTree(dir: "${ideaPath}/lib/", include: "*.jar")
    provided fileTree(dir: "${ideaPath}/plugins/git4idea/lib/", include: "*.jar")
    provided fileTree(dir: "${ideaPath}/plugins/github/lib/", include: "*.jar")
}

sourceSets {
    main {
        java { srcDir "./intellij-adapter/src" }
        groovy { srcDir "./" }
    }
}

task jarPlugin(dependsOn: [compileGroovy]) << {
    def targetFolder = "${basePath}/build/code-history-mining-plugin/code-history-mining-plugin"
    ant.delete(dir: targetFolder)

    ant.copy(toDir: "${basePath}/build/classes/main/META-INF/") {
        ant.fileset(dir: "${basePath}/intellij-adapter/META-INF")
    }

    ant.delete(dir: "${basePath}/build/classes/main/.idea")
    ant.delete(dir: "${basePath}/build/classes/main/lib")
    ant.jar(baseDir: "${basePath}/build/classes/main/", destFile: "$targetFolder/lib/code-history-mining-plugin.jar")

    ant.copy(toDir: "$targetFolder/lib") { file ->
        ant.fileset(dir: "${basePath}/lib")
    }
}

task zipPlugin(dependsOn: jarPlugin) << {
    ant.zip(
        destfile: "${basePath}/build/code-history-mining-plugin.zip",
        basedir: "${basePath}/build/code-history-mining-plugin"
    )
}

task downloadLibs() << {
    def libs = [
        "$ideaPath/lib/groovy-all-2.2.1.jar",
        "$codeMiningPath/lib/non-maven/vcs-reader.jar",
        "$codeMiningPath/lib/commons-csv-1.0.jar",
        "$codeMiningPath/build/libs/code-mining-core.jar",
        "$livePluginPath/LivePlugin.jar"
    ]
    ant.delete(dir: "${basePath}/lib")
    ant.mkdir(dir: "${basePath}/lib")
    libs.each { lib ->
        ant.copy(file: lib, toDir: "${basePath}/lib")
    }
}

def withDefault(value, defaultValue) {
    value == null ? defaultValue : value
}